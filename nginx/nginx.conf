# upstream para la aplicación Flask
upstream app_server {
    server cactus_app:8000;
}

# Redirección HTTP a HTTPS
server {
    listen 80;
    server_name cactuscamila.cc www.cactuscamila.cc;
    
    # Redirige todo el tráfico HTTP a HTTPS
    return 301 https://$server_name$request_uri;
}

# Servidor HTTPS principal
server {
    listen 443 ssl;
    server_name cactuscamila.cc www.cactuscamila.cc;

    # Ruta a los certificados SSL (se crearán con Certbot)
    ssl_certificate /etc/letsencrypt/archive/cactuscamila.cc/fullchain1.pem;
    ssl_certificate_key /etc/letsencrypt/archive/cactuscamila.cc/privkey1.pem;
    
    # Configuración SSL recomendada
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    location / {
        proxy_pass http://app_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /static {
        alias /app/static;
    }

    # Configuración para Certbot - desafíos HTTP para renovación
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Configuración para monitoreo protegido
    location /monitor/ {
        auth_request /auth_verify;
        error_page 401 = @error401;

        proxy_pass http://cadvisor:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    
        proxy_redirect http://cadvisor:8080/ /monitor/;
        proxy_redirect /containers/ /monitor/containers/;
    }

    location = /auth_verify {
        internal;
        proxy_pass http://app_server/auth_verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }

    location @error401 {
        return 302 /auth/login?next=$request_uri;
    }
}
